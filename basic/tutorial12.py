'''
ในไฟล์นี้จะเป็นการเรียนรู้เกี่ยวกับการใช้งาน NumPy ใน Python
NumPy เป็น module Python สำหรับการจัดการ NumPy Array/nArray(matrices) และการคำนวณคณิตศาสตร์
'''

'''
ในบางครั้งเราอาจต้องการเปลี่ยนชนิดข้อมูลใน array 
ให้ใช้คำสั่ง array.astype(type)
เช่น
type = int เป็นจำนวนเต็ม
type = float เป็นจำนวนจริง 
type = str เป็นตัวอักษร
เป็นต้น
'''
import numpy as np

x = np.array([3.5,4.7,9,11.3,15]) # type = float
print(x) # ได้ [  3.5   4.7   9.   11.3  15. ]
print(x.astype(int)) # ได้ [ 3  4  9 11 15]
print(x.astype(str)) # ได้ ['3.5' '4.7' '9.0' '11.3' '15.0']

x.astype('float64') 
print(x) # ได้ [  3.5   4.7   9.   11.3  15. ]

x.astype('float32')
print(x) # ได้ [  3.5   4.7   9.   11.3  15. ]

x.astype('float16')
print(x) # ได้ [  3.5   4.7   9.   11.3  15. ]

'''
การสร้างเวกเตอร์และเมทริกซ์ต่าง ๆ ด้วย NumPy

np.arange   สร้างอาเรย์หนึ่งมิติที่มีเลขเรียงกัน
np.linspace สร้างอาเรย์หนึ่งมิติตามจำนวนที่กำหนดโดยเว้นช่วงเท่าๆกัน
np.ones     สร้างอาเรย์ที่มีแต่เลข 1 ตามขนาดที่กำหนด
np.zeros    สร้างอาเรย์ที่มีแต่เลข 0 ตามขนาดที่กำหนด
np.full     สร้างอาเรย์ที่มีแต่เลขอะไรก็ได้เลขเดียวตามที่กำหนด โดยมีขนาดตามที่กำหนด
np.empty    สร้างอาเรย์เปล่าๆ ตามขนาดที่กำหนด
np.identity สร้างอาเรย์ที่เป็นเมทริกซ์เอกลักษณ์ (เมทริกซ์สองมิติที่มีค่าเป็น 1 เมื่อพิกัดแนวตั้งและนอนเท่ากัน นอกนั้นเป็น 0)
np.eye      เหมือนกับ np.identity แต่ขนาดแนวตั้งและนอนไม่ต้องเท่ากันก็ได้
'''

print(np.arange(10)) # (n) หมายถึงจำนวนเต็มตั้งแต่ 0 ถึง n-1
print(np.arange(1.5,8,2)) # (จุดเริ่ม, จุดปลาย, กระโดดที่ละ) คล้ายกับ range แต่ไม่จำเป็นต้องเป็นจำนวนเต็ม
print(np.linspace(4, 7, 6)) # (จุดเริ่ม, จุดปลาย, จำนวน)

print()

print(np.ones(10)) # สร้างเวกเตอร์ที่มีทุกสมาชิกเป็น 1 ขนาด 10
print(np.ones([2,4])) # สร้างmatrixที่มีทุกสมาชิกเป็น 1 ขนาด (2,4)
print(np.zeros([2,5])) # สร้างmatrixที่มีทุกสมาชิกเป็น 0 ขนาด (2,5)

print()

print(np.full(4,10))     # (n,d) สร้างเวกเตอร์ที่มีทุกสมาชิกเป็น d ขนาด n
print(np.full([2,2],5))  # ([n,m],d) สร้างmatrixที่มีทุกสมาชิกเป็น d ขนาด (n,m)

print()

print(np.empty([2,7])) # (n,m) จองพื้นที่ใน RAM เพื่อใช้เก็บข้อมูลขนาด (n,m)

print()

print(np.identity(3)) # (n) identity matrix ขนาด (n,n)
print(np.eye(2)) # ใได้ผลเหมือน np.identity
print(np.eye(2,5)) # (n,m) matrix ขนาด (n,m) เฉพาะสมาชิกที่มี index เป็น (i,i) จะมีค่าเป็น 1 ที่เหลือจะเป็น 0 หมด